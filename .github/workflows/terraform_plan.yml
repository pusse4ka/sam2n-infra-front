name: terraform validate & terraform plan & aws sandbox session
run-name: terraform validate & terraform plan & aws sandbox session
on:
  workflow_call:
    inputs:
      aws-sandbox-role-arn:
        required: false
        type: string
        default: arn:aws:iam::242906888793:role/AWS_Sandbox
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
    outputs:
      SANDBOX_AWS_ACCESS_KEY_ID:
        description: "Access key ID"
        value: ${{ jobs.terraform-plan-infrastructure.outputs.accessKeyId }}
      SANDBOX_AWS_SESSION_TOKEN:
        description: "Session token"
        value: ${{ jobs.terraform-plan-infrastructure.outputs.sessionToken }}
      SANDBOX_AWS_SECRET_ACCESS_KEY:
        description: "Secret access key"
        value: ${{ jobs.terraform-plan-infrastructure.outputs.secretAccessKey }}

jobs:
  terraform-plan-infrastructure:
    runs-on: ubuntu-latest
    outputs:
      SANDBOX_AWS_ACCESS_KEY_ID: ${{ steps.aws-sandbox-session.outputs.SANDBOX_AWS_ACCESS_KEY_ID }}
      SANDBOX_AWS_SESSION_TOKEN: ${{ steps.aws-sandbox-session.outputs.SANDBOX_AWS_SESSION_TOKEN }}
      SANDBOX_AWS_SECRET_ACCESS_KEY: ${{ steps.aws-sandbox-session.outputs.SANDBOX_AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Terraform
        env:
          TERRAFORM_VERSION: "1.4.0"
        run: |
          tf_version=$TERRAFORM_VERSION
          wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
          unzip terraform_"$tf_version"_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

      - name: Verify Terraform version
        run: terraform --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Create Sandbox session
        id: aws-sandbox-session
        run: |
          credentials=$(aws sts assume-role --role-arn "${{ aws-sandbox-role-arn }}" --role-session-name sandbox-session)
          {
            echo "SANDBOX_AWS_ACCESS_KEY_ID=$(echo "$credentials" | jq .Credentials.AccessKeyId -r)"
            echo "SANDBOX_AWS_SESSION_TOKEN=$(echo "$credentials" | jq .Credentials.SessionToken -r)"
            echo "SANDBOX_AWS_SECRET_ACCESS_KEY=$(echo "$credentials" | jq .Credentials.SecretAccessKey -r)"
          } >> "$GITHUB_ENV"
          {
            echo "SANDBOX_AWS_ACCESS_KEY_ID=$(echo "$credentials" | jq .Credentials.AccessKeyId -r)"
            echo "SANDBOX_AWS_SESSION_TOKEN=$(echo "$credentials" | jq .Credentials.SessionToken -r)"
            echo "SANDBOX_AWS_SECRET_ACCESS_KEY=$(echo "$credentials" | jq .Credentials.SecretAccessKey -r)"
          } >> "$GITHUB_OUTPUT"

      - name: Terraform init
        env:
          AWS_DEFAULT_REGION: eu-central-1
          AWS_ACCESS_KEY_ID: ${{ env.SANDBOX_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.SANDBOX_AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ env.SANDBOX_AWS_SESSION_TOKEN }}
        run: terraform init

      - name: Terraform validation
        run: terraform validate

      - name: Terraform plan
        env:
          AWS_DEFAULT_REGION: eu-central-1
          AWS_ACCESS_KEY_ID: ${{ env.SANDBOX_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.SANDBOX_AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ env.SANDBOX_AWS_SESSION_TOKEN }}
        run: terraform plan -out tfplan

      - name: Save tf plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan