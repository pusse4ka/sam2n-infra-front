name: Validate terraform files & generate plan
run-name: Validate terraform files & generate plan
defaults:
  run:
    working-directory: ./infra
on: [pull_request, workflow_dispatch]
#on:
#  pull_request:
#    types: [opened, reopened, edited]
env:
  SANDBOX_IAM_ROLE: arn:aws:iam::242906888793:role/AWS_Sandbox
#  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#  AWS_DEFAULT_REGION: eu-central-1
#  AWS_ROLE_ARN: arn:aws:iam::242906888793:role/AWS_Sandbox
jobs:
  terraform-plan-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Terraform
        env:
          TERRAFORM_VERSION: "0.12.15"
        run: |
          tf_version=$TERRAFORM_VERSION
          wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
          unzip terraform_"$tf_version"_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

      - name: Verify Terraform version
        run: terraform --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Assume Sandbox role
        run: |
          aws sts assume-role --role-arn ${{ env.SANDBOX_IAM_ROLE }} \
          --role-session-name sandbox-session \
          && echo aws sts get-caller-identity

      - name: Terraform init
        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
#          AWS_ROLE_ARN: ${{ env.SANDBOX_IAM_ROLE }}
          TF_LOG: DEBUG # TODO remove
        run: terraform init -input=false

      - name: Terraform validation
        run: terraform validate

      - name: Terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
          AWS_ROLE_ARN: ${{ env.SANDBOX_IAM_ROLE }}
        run: terraform plan

#      - name: Terraform apply
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_DEFAULT_REGION: eu-central-1
#          AWS_ROLE_ARN: ${{ env.SANDBOX_IAM_ROLE }}
#        run: terraform apply -auto-approve -input=false

#=====================================================================

#      - uses: actions/setup-node@v3
#        with:
#          node-version: '16'
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
#          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
#          aws-region: eu-central-1
#          role-to-assume: '${{ env.SANDBOX_IAM_ROLE }}'
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v2
#        with:
#          terraform_wrapper: false
#      - name: Terraform format
#        id: fmt
#        run: terraform fmt -check
#        continue-on-error: true
#      - name: Terraform Init
#        id: init
#        run: terraform init
#      - name: Terraform Validate
#        id: validate
#        run: terraform validate
#      - name: Terraform Plan
#        id: plan
#        run: terraform plan